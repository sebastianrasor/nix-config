# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "thunderbolt"
    "usbhid"
  ];
  boot.initrd.kernelModules = ["amdgpu"];
  boot.kernelModules = [];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = [
      "defaults"
      "mode=755"
    ];
  };
  fileSystems."/nix/persist" = {
    device = "/dev/disk/by-uuid/3e50da91-9d68-4888-819f-0a9de1903be7";
    fsType = "ext4";
    neededForBoot = true;
    options = [
      "defaults"
      "x-mount.mkdir"
      "nofail"
    ];
  };
  fileSystems."/nix/store" = {
    depends = ["/nix/persist"];
    device = "/nix/persist/nix/store";
    fsType = "none";
    options = ["bind"];
  };
  fileSystems."/nix/var" = {
    depends = ["/nix/persist"];
    device = "/nix/persist/nix/var";
    fsType = "none";
    options = ["bind"];
  };
  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/DFD9-B7CB";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
